name: default

on:
  push:
    branches: [main]
    tags-ignore:
      - "*"
  pull_request:
    branches: [main]
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]

  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        if: ${{ github.event_name != 'pull_request_target' }}

      - name: Checkout PR
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-node@v3
        with:
          node-version: "16.15.0"

      - name: Lint nginx conf files
        run: |-
          npm install -g nginx-linter
          nginx-linter --include "nginx-proxy/**/*.conf"

  docker:
    runs-on: ubuntu-latest

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Docker build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: localhost:5000/gitlab-proxy:latest
          file: ./nginx-proxy/Dockerfile
          context: ./nginx-proxy

      - name: Inspect docker image
        run: |
          docker buildx imagetools inspect localhost:5000/gitlab-proxy:latest

      - name: Prepare Docker Run
        working-directory: ./nginx-proxy
        run: |-
          cp .env.example /tmp/env
          cp api_keys.conf.example /tmp/api_keys.conf

      - name: Docker Run
        run: |-
          docker run \
            -d \
            --env-file /tmp/env \
            -v /tmp/api_keys.conf:/etc/nginx/api_keys/api_keys.conf:ro \
            -p 8080:80 localhost:5000/gitlab-proxy:latest

      - name: Curl
        run: |-
          curl -v http://0.0.0.0:8080
